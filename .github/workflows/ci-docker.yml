name: CI-Docker

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      jdk:
        required: true
        type: string
      push:
        required: true
        type: boolean
      image:
        required: false
        type: string
      registry:
        required: false
        type: string
      repository:
        required: true
        type: string
    secrets:
      HUB_USERNAME:
        required: true
      HUB_PASSWORD:
        required: true

jobs:
  release:
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK ${{ inputs.jdk }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.jdk }}
#          distribution: temurin
          distribution: dragonwell
          cache: maven
      - name: Setup Version
        id: setup-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Build
        run: build/mvn-build.sh
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.registry }}/${{ inputs.repository }}/${{ matrix.image }}
          tags: |
            type=raw,value=${{ steps.setup-version.outputs.PROJECT_VERSION }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compile Project
        run: ./mvnw -e -B -U -T 4C clean package -Dfast -DskipTests
      - name: Build Image
        id: build
        uses: docker/build-push-action@v5
        with:
          no-cache: false
          cache-from: type=gha
          cache-to: type=gha
          push: ${{ inputs.push }}
          context: .
          platforms: linux/amd64,linux/arm64
          file: tools/docker/build/${{ matrix.image }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
